commit d0a722cb8fb886380e24e8261e8efca09a3262d6
Author:     Sebastien Buisson <sbuisson@ddn.com>
AuthorDate: Tue Dec 20 15:40:52 2022 +0100
Commit:     Oleg Drokin <green@whamcloud.com>
CommitDate: Thu Aug 31 06:28:45 2023 +0000
LU-16374 ldiskfs: implement security.encdata xattr

security.encdata is a virtual xattr containing information related
to encrypted files. It is expressed as ASCII text with a "key: value"
format, and space as field separator. For instance:

   { encoding: base64url, size: 3012, enc_ctx: YWJjZGVmZ2hpamtsbW
   5vcHFyc3R1dnd4eXphYmNkZWZnaGlqa2xtbg, enc_name: ZmlsZXdpdGh2ZX
   J5bG9uZ25hbWVmaWxld2l0aHZlcnlsb25nbmFtZWZpbGV3aXRodmVyeWxvbmdu
   YW1lZmlsZXdpdGg }

'encoding' is the encoding method used for binary data, assume name
can be up to 255 chars.
'size' is the clear text file data length in bytes.
'enc_ctx' is encoded encryption context, 40 bytes for v2.
'enc_name' is encoded encrypted name, 256 bytes max.
So on overall, this xattr is at most 727 chars plus terminating '0'.

On get, the value of the security.encdata xattr is computed from
encrypted file's information.
On set, encrypted file's information is restored from xattr value.
The encrypted name is stored temporarily in a dedicated xattr
LDISKFS_XATTR_NAME_RAWENCNAME, that will be used to set correct name
at linkat.

Signed-off-by: Sebastien Buisson <sbuisson@ddn.com>
Change-Id: Ia318c39d403b1c448e71bcd5b29862d022d05d0a
Reviewed-on: https://review.whamcloud.com/49456
Reviewed-by: Andreas Dilger <adilger@whamcloud.com>
Reviewed-by: Li Dongyang <dongyangli@ddn.com>

diff -wur /dev/null b/fs/ext4/encdata.h
--- /dev/null
+++ b/fs/ext4/encdata.h
@@ -0,0 +1,16 @@
+/*
+ *  encdata.h
+ *
+ *  Copyright (c) 2022 Whamcloud
+ */
+
+#ifndef _ENCDATA_H
+#define _ENCDATA_H
+
+/* Define a fixed 4096-byte encryption unit size */
+/* Must be identical to LUSTRE_ENCRYPTION_UNIT_SIZE */
+#define EXT4_ENCRYPTION_BLOCKBITS 12
+#define EXT4_ENCRYPTION_UNIT_SIZE ((size_t)1 << EXT4_ENCRYPTION_BLOCKBITS)
+#define EXT4_ENCRYPTION_MASK      (~(EXT4_ENCRYPTION_UNIT_SIZE - 1))
+
+#endif /* _ENCDATA_H */
diff -wur a/fs/ext4/inode.c b/fs/ext4/inode.c
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -45,6 +45,7 @@
 #include "xattr.h"
 #include "acl.h"
 #include "truncate.h"
+#include "encdata.h"
 
 #include <trace/events/ext4.h>
 
@@ -5769,6 +5770,12 @@ int ext4_getattr(const struct path *p
 				  STATX_ATTR_NODUMP);
 
 	generic_fillattr(inode, stat);
+
+	if (flags & EXT4_ENCRYPT_FL &&
+	    unlikely(!IS_LUSTRE_MOUNT(inode->i_sb)))
+		stat->size = round_up(stat->size,
+				      EXT4_ENCRYPTION_UNIT_SIZE);
+
 	return 0;
 }
 
